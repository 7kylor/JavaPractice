' Create a class diagram and justify an inheritance hierarchy that could be used to represent the following classes : shape, rectangle, square, circle, ellipse, triangle


@startuml

class Shape {
    +getArea()
    +getPerimeter()
}

class Rectangle {
    +getArea()
    +getPerimeter()
}

class Square {
    +getArea()
    +getPerimeter()
}

class Circle {
    +getArea()
    +getPerimeter()
}

class Ellipse {
    +getArea()
    +getPerimeter()
}

class Triangle {
    +getArea()
    +getPerimeter()
}

Shape <|-- Rectangle
Shape <|-- Square
Shape <|-- Circle
Shape <|-- Ellipse
Shape <|-- Triangle

@enduml


' //// 2nd way    

@startuml

class Shape {
    +getArea()
    +getPerimeter()
}

class Rectangle extends Shape {
    +getArea()
    +getPerimeter()
}

class Square extends Rectangle {
    +getArea()
    +getPerimeter()
}

class Circle extends Ellipse {
    +getArea()
    +getPerimeter()
}

class Ellipse extends Shape  {
    +getArea()
    +getPerimeter()
}

class Triangle extends Shape {
    +getArea()
    +getPerimeter()
}

 

@enduml